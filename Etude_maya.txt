Comment créer un générateur de date Maya Long Count?
Le calendrier Maya fonctionne sur un système numérique de base 20.

https://en.wikipedia.org/wiki/Mesoamerican_Long_Count_calendar 		>>> NB: Here an algorythm to calculate the date.

		Long Count    |  Long Count    |  Days    		|  Approximate 
		unit          |  period        |             	|  Solar Years
		1 K'in                      	 	1	 
		1 Winal	         20 K'in        	20	 
		1 Tun			 18 Winal			360					1
		1 K'atun		 20 Tun				7,200				20
		1 B'ak'tun	   	 20 K'atun			144,000				394
		1 Piktun		 20 B'ak'tun		2,880,000			7,885
		1 Kalabtun		 20 Piktun			57,600,000			157,704
		1 K'inchiltun	 20 Kalabtun		1,152,000,000		3,154,071
		1 Alautun		 20 K'inchiltun		23,040,000,000		63,081,429

So the long count isn't entirely in base 20.
There is 18 month/Winal of 20 days/K'in each, in a Year/Tun. Then we count in base 20 from there.

There is 2 referencials as base points for long count 0.0.0.0.0.0.0, and they set 2 days appart... Selon les calcules officiels des chercheurs en la matière.
	 > ref1: Mayan Year 0, C = 584283		[This referential point is the one I currently use, through date converting websites and date converting softwares]
	 > ref2: Mayan Year 0, C = 584285
That changes the way we count, or compute the date.
Those 2 ref points corresponds to GMT correlation to the total number of days.

		>How to convert a date into a number of days from those reference points?
		>How to convert a number in base 10, into a number in base x (here we need bases 18 and 20).
		>How to convert bases into this format: base20 - BASE18 - b20 - b20 - b20 - b20 - b20 - b20? The passage from 20 to 18 to 20?
		>Would it be better to display it in a String? a List? a Tuple? a Dictionary? > I tend to go for Dictionary, with long count's units as keys.
		>How to display the results? Do we just print the dictionary? or create a string?
		>How to take into account all leap years that went through history?
		>How to develop all that in Object Oriented Programming? (and, would it be relevent?)

OBJECTIF: Générate a Mayan Long Count Date from a Gregorian Date (Normal ISO-8601 Calendar)

Resources:
	https://en.wikipedia.org/wiki/Mesoamerican_Long_Count_calendar 		>>> NB: Here an algorythm to calculate the date.
	https://docs.python.org/3/library/calendar.html 		> Python module Calendar documentation
	https://youtu.be/-5wpm-gesOY 		> How Time computing is messed up
	https://youtu.be/aRQxMYoCOuI 		> How to handle date and unix time in python
	https://youtu.be/sSjLeKZZcCk 		> A differenciation between Unix Time, UTC, and ISO8601
	https://calendarhome.com/calculate/convert-a-date/ 		> My reference Date converting website, that I currently use.
-----------------------------------------------
Personnal Note:

	The geniuine beauty of Mayan Long count calendar, is that it actually is a time counting system (astronomically accurate).
	Unlike classical calendars (ISO8601, Gregorian, Chinese, etc), hose traditionnaly used calendar are counting cicles, from an arbitrary reference point in time.
	Mayan Long Count, is counting time, as days goes by. Like Unix Time (which count passing time in seconds, from a referencial point), and Stardate.
	Unlike Stardate, Mayan LC is standardized, and it's calculation fixed.
	Unlike Unix Time, Mayan LC is starting long before Human kind. There for, we can identify any date in history, as a positive number.
	
		e.g.
			Mayan LC: 0.0.0.0.0 (8 Cumku - 4 Ahau)
			Gregorian Calendar: Year -3113 August 11th (BCE)
			ISO-8601: Year -3113, day 223
			Unix time : -160384752000
			Stardate: ... Due to it's imaginary origin, and wildly arbitrary reference point (see Readme in Stardate project), No conversion can be made here.

	Nevertheless, The advantage of Unix Time and Stardate over other kind of calendars, is that they also inclued Time (HH:MM:SS) tracking. To be precise, Stardate has about 5min accuracy, while Unix Time is 1s accuracy (and could actually come down to 1 milli-second accuracy).
	
	In pre-colombian mesoamerican believe, the Mayan LC was created to count down the number of days, which mapped out a linear sequence of days from a notional starting point: creation of the world. [I like the idea!]
	If we need to place this "Ground ZERO" date on Humanity timeline, it correlate to (about) the first dynasty in ancien Egypt.
	
	Not ideal to count Time through the ENTIRE Humanity's time line (Nor world's creation, Nor Univers creation). But I love this Long Count!!!
	
	[From this calendar, can be created a similar constructed calendar (Fictionnal calendar). That, in the same manner count time from a further point in Time. In that case, I would suggest to choose a larger numerical base (e.g. base-36, using all numerals 0-9 & alphabet a-z; or base-60 with Mesopotamian/Babylonian numerical base).]
-----------------------------------------------
Few leads/ideas:
> Use datetime delta to compute the number of days batween 2 dates/points in time. (Or datetime's timestamp)
		> Does it express in days?
		> Does it work counting through leap years into account? (Yes this synthax isn't properly asked)
> Extensive uses of // (division d'entier) and % (modulo)
		delta_x // Base_20 = Last digit of LC string (corresponding to days = K'in)
		(delta_x % Base_20) // Base_18 = Second last digit of LC string (corresponding to months = Winal)
		((delta_x % Base_20) % Base_18) // Base_20 = Third last digit of LC string (corresponding to Years = Tun)
		(((delta_x % Base_20) % Base_18) % Base_20) // Base_20 = Fourth last digit of LC string (corresponding to 20th-Years = K'atun)
		etc...
		etc...
		etc..., all the way to Alautun
-----------------------------------------------
https://en.wikipedia.org/wiki/Mesoamerican_Long_Count_calendar

The Mesoamerican Long Count calendar is a non-repeating, vigesimal (base-20) and base-18 calendar used by several pre-Columbian Mesoamerican cultures, most notably the Maya. For this reason, it is often known as the Maya (or Mayan) Long Count calendar. Using a modified vigesimal tally, the Long Count calendar identifies a day by counting the number of days passed since a mythical creation date that corresponds to August 11, 3114 BCE in the Proleptic Gregorian calendar.[n 1] The Long Count calendar was widely used on monuments.

[...]

>>Converting between the Long Count and western calendars

>Calculating a western calendar date from a Long Count
It's important to know the difference between the Julian and Gregorian calendars when doing these conversions. [n 8]

Using as an example the Long Count date of 9.10.11.17.0 (Long Count date mentioned on the Palenque Palace Tablet), first calculate the number of days that have passed since the zero date (August 11, 3114 BC; GMT correlation, in the Proleptic Gregorian calendar, September 6, −3113 Julian astronomical).

	9	× 144,000	= 1,296,000
	10	× 7,200	= 72,000
	11	× 360	= 3,960
	17	× 20	= 340
	0	× 1	= 0
	Total days	= 1,372,300

Then add the GMT correlation to the total number of days.

1,372,300 + 584,283 = 1,956,583
This number is a Julian day.

#To convert a Julian day to a Proleptic Gregorian calendar date:[61]

From this number, subtract the nearest smaller Julian Day Number (in the table below), in this case 1 940 206, which corresponds to the year 600 AD.

	year	JDN:			year		JDN:
	1		1 721 060		1 100		2 122 827
	100		1 757 585		1 200		2 159 351
	200		1 794 109		1 300		2 195 876
	300		1 830 633		1 400		2 232 400
	400		1 867 157		1 500		2 268 924
	500		1 903 682		1 600		2 305 448
	600		1 940 206		1 700		2 341 973
	700		1 976 730		1 800		2 378 497
	800		2 013 254		1 900		2 415 021
	900		2 049 779		2 000		2 451 545
	1 000	2 086 303

1,956,583 – 1,940,206 = 16,377
Next, divide this number by 365 days (vague year).

16,377 / 365 = 44.86849

The remainder is 44.86849 years, which is 44 years and 317 days. The full year date is 644 AD. Now calculate the month and day number, taking into account leap days over the 44 years. In the Gregorian Calendar, every fourth year is a leap year with the exception of centuries not evenly divisible by 400 (e.g. 100, 200, 300). When the year is divisible by 400 (e.g. 400, 800, etc.), do not add an extra day. Our calculated year is 644 AD. The number of leap days, keeping in mind that the year 600 is not a leap year, is 10. Subtracting that from 317 remainder days is 307; in other words, the 307th day of the year 644 AD, which is November 3. To summarize: the Long Count date 9.10.11.17.0 corresponds to November 3, 644 AD, in the Proleptic Gregorian calendar.

#To convert a Julian day to a Julian/Gregorian astronomical date (Proleptic Julian calendar before 46 BC):

Use an astronomical algorithm such as the Method of Meeus[62] to convert the Julian day to a Julian/Gregorian date with astronomical dating of negative years:

#Important: Astronomical algorithms calculate a day as a decimal number equal to a day and a fraction of a day. The Julian date starts at noon. Astronomical dating has a year 0. In historical dating the year 1 BCE is followed by the year 1. Astronomical years before 0 are written with a negative sign. For example, the year 3114 BCE is the year −3113 astronomical.

In this Example:

		add 0.5 to the Julian day (1,956,583.5)
		calculate Z integer part (1,956,583)
		calculate decimal number F fraction part (0.5)
		if Z < 2,299,161 (Gregorian?)
			integer A = Z
		else{
			integer alpha = floor((Z – 1,867,216.25) / 36,524.25)1 (15)
			A = Z + 1 + alpha – floor(alpha / 4.0)1 (2,436,129)
			}
		calculate integer B = A + 1524 (1,958,107)
		calculate integer C = floor((B – 122.1) / 365.25)1 (5,360)
		calculate integer D = floor(365.25 * C)1 (1,957,740)
		calculate integer E = floor((B – D) /30.6001)1 (11)
		decimal number day = B – D – floor(30.6001 * E)1 + F (31.5)
		if(E < 14)
			 integer month = E – 1 (10)
		else
			 month = E – 13
		if(month > 2)
			 integer year = C – 4,716 (644)
		else
			year = C – 4715

The floor operation is rounding a decimal number down to the next lowest integer. For example, floor(1.5) = 1 and floor(−1.5) = -2

In this example the Julian date is noon October 31, 644. The Method of Meeus isn't valid for negative Julian day numbers, so another method such as the method of Peter Baum[63] should be used.

>>Calculating a full Long Count date

Chichen Itza Initial Series inscription. This date (glyphs A2, B2, …, A5) is 10.2.9.1.9   9 Muluk 7 Sak, equivalent to July 28, 878 (GMT Gregorian).
As stated, a full Long Count date not only includes the five digits of the Long Count, but the 2-character Tzolk'in and the two-character Haab' dates as well. The five digit Long Count can therefore be confirmed with the other four characters (the "calendar round date").

Taking as an example a Calendar Round date of 9.12.2.0.16 (Long Count) 5 Kib' (Tzolk'in) 14 Yaxk'in (Haab'). One can check whether this date is correct by the following calculation.

It is perhaps easier to find out how many days there are since 4 Ajaw 8 Kumk'u and show how the date 5 Kib' 14 Yaxk'in is derived.

	9	× 144000	= 1296000
	12	× 7200	= 86400
	2	× 360	= 720
	0	× 20	= 0
	16	× 1	= 16
	Total days	= 1383136

>Calculating the Tzolk'in date portion
The Tzolk'in date is counted forward from 4 Ajaw. To calculate the numerical portion of the Tzolk'in date, add 4 to the total number of days given by the date and then divide total number of days by 13.

(4 + 1,383,136) / 13 = 106,395 (and 5/13)
This means that 106,395 whole 13-day cycles have been completed and the numerical portion of the Tzolk'in date is 5.

To calculate the day, divide the total number of days in the long count by 20 since there are twenty day names.

1,383,136 / 20 = 69,156 (and 16/20)
This means 16 day names must be counted from Ajaw. This gives Kib'. Therefore, the Tzolk'in date is 5 Kib'.

>Calculating the Haab' date portion
The Haab' date 8 Kumk'u is the ninth day of the eighteenth month. There are 17 days to the start of the next year.

Subtract 17 days from the total, to find how many complete Haab' years are contained.

138,3136 − 17 = 1,383,119
Divide by 365

1,383,119 / 365 = 3,789 and (134/365)
Therefore, 3,789 complete Haab' have passed and the remainder 134 is the 135th day in the new Haab', since a remainder of 0 would indicate the first day.

Find which month the day is in. Dividing the remainder 134 by 20, is six complete months and a remainder of 14, indicating the 15th day. So, the date in the Haab' lies in the seventh month, which is Yaxk'in. The fifteenth day of Yaxk'in is 14, thus the Haab' date is 14 Yaxk'in.

So the date of the long count date 9.12.2.0.16 5 Kib' 14 Yaxk'in is confirmed.
